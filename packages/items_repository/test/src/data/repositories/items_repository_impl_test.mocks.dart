// Mocks generated by Mockito 5.4.4 from annotations
// in items_repository/test/src/data/repositories/items_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:items_repository/items_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:products_repository/products_repository.dart' as _i4;
import 'package:storages_repository/storages_repository.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeItemModel_0 extends _i1.SmartFake implements _i2.ItemModel {
  _FakeItemModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ItemsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockItemsProvider extends _i1.Mock implements _i2.ItemsProvider {
  MockItemsProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.ItemModel> add({
    required _i4.ProductEntity? product,
    required DateTime? initialExpiryDate,
    required int? amount,
    required _i5.StorageEntity? storage,
    required DateTime? openedAt,
    int? shelf,
    int? unsealedLifeTimeInDays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [],
          {
            #product: product,
            #initialExpiryDate: initialExpiryDate,
            #amount: amount,
            #storage: storage,
            #openedAt: openedAt,
            #shelf: shelf,
            #unsealedLifeTimeInDays: unsealedLifeTimeInDays,
          },
        ),
        returnValue: _i3.Future<_i2.ItemModel>.value(_FakeItemModel_0(
          this,
          Invocation.method(
            #add,
            [],
            {
              #product: product,
              #initialExpiryDate: initialExpiryDate,
              #amount: amount,
              #storage: storage,
              #openedAt: openedAt,
              #shelf: shelf,
              #unsealedLifeTimeInDays: unsealedLifeTimeInDays,
            },
          ),
        )),
      ) as _i3.Future<_i2.ItemModel>);

  @override
  _i3.Future<_i2.ItemModel> update({
    required String? id,
    required DateTime? initialExpiryDate,
    required int? amount,
    required _i5.StorageEntity? storage,
    required DateTime? openedAt,
    int? shelf,
    int? unsealedLifeTimeInDays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [],
          {
            #id: id,
            #initialExpiryDate: initialExpiryDate,
            #amount: amount,
            #storage: storage,
            #openedAt: openedAt,
            #shelf: shelf,
            #unsealedLifeTimeInDays: unsealedLifeTimeInDays,
          },
        ),
        returnValue: _i3.Future<_i2.ItemModel>.value(_FakeItemModel_0(
          this,
          Invocation.method(
            #update,
            [],
            {
              #id: id,
              #initialExpiryDate: initialExpiryDate,
              #amount: amount,
              #storage: storage,
              #openedAt: openedAt,
              #shelf: shelf,
              #unsealedLifeTimeInDays: unsealedLifeTimeInDays,
            },
          ),
        )),
      ) as _i3.Future<_i2.ItemModel>);

  @override
  _i3.Future<List<_i2.ItemModel>> fetch() => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [],
        ),
        returnValue: _i3.Future<List<_i2.ItemModel>>.value(<_i2.ItemModel>[]),
      ) as _i3.Future<List<_i2.ItemModel>>);

  @override
  _i3.Future<bool> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
